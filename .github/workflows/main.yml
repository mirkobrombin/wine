name: chardonnay
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt -y install software-properties-common
          sudo add-apt-repository ppa:cybermax-dexter/vkd3d -y
          sudo add-apt-repository ppa:cybermax-dexter/sdl2-backport -y
          sudo apt-get -qq update
          sudo apt install -o APT::Immediate-Configure=false -y libacl1-dev:i386 libasound2-dev:i386 libcups2-dev:i386 libdbus-1-dev:i386 libgcrypt-dev:i386 libgif-dev:i386 libglu1-mesa-dev:i386 libgsm1-dev:i386 liblcms2-dev:i386 libldap2-dev:i386 libmpg123-dev:i386 libncurses5-dev:i386 libopenal-dev:i386 libosmesa6-dev:i386 libpcap-dev:i386 libpulse-dev:i386 libssl-dev:i386 libtiff5-dev:i386 libudev-dev:i386 libv4l-dev:i386 libva-dev:i386 libxslt1-dev:i386 libxt-dev:i386 libcolord2:i386 libvulkan-dev:i386 libgnutls28-dev:i386 libgstreamer-plugins-base1.0-dev:i386 libgstreamer1.0-dev:i386 libpng-dev:i386 libsdl2-dev:i386 libavcodec-dev:i386 libavutil-dev:i386 libswresample-dev:i386 libavcodec58:i386 libswresample3:i386 libavutil56:i386 libfaudio0:i386 libfaudio-dev:i386 libvkd3d-dev:i386 libvkd3d-utils1:i386 libvulkan1:i386 libgstreamer1.0-0:i386 gstreamer1.0-libav:i386
          sudo apt install -y autoconf bison ccache debhelper desktop-file-utils docbook-to-man \
          docbook-utils docbook-xsl flex fontforge gawk gettext libacl1-dev \
          libasound2-dev libdbus-1-dev \
          libgcrypt-dev libgif-dev libglu1-mesa-dev libgsm1-dev libgtk-3-dev \
          liblcms2-dev libldap2-dev libmpg123-dev libncurses5-dev \
          libopenal-dev libosmesa6-dev libpcap-dev libpulse-dev \
          libssl-dev libtiff5-dev libudev-dev libv4l-dev libva-dev libxslt1-dev libxt-dev \
          ocl-icd-opencl-dev prelink valgrind linux-libc-dev libppl14 libcolord2 libvulkan-dev \
          libgnutls28-dev libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev \
          libpng-dev libsdl2-dev libavcodec-dev \
          libavutil-dev libswresample-dev libavcodec58 libswresample3 libavutil56 libfaudio0 libfaudio-dev \
          libvkd3d1 libvkd3d-dev libvkd3d-utils1 vkd3d-demos libvulkan1 \
          libgstreamer1.0-0 gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad \
          gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x \
          gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio
      
      - name: GCC Setup
        run: |
          if [ "$CXX" = "g++" ]; then export CXX="g++-5" CC="gcc-5"; fi
      
      - name: Fetching Wine Staging
        working-directory: /home/runner/work/
        run: |
          git clone https://github.com/wine-staging/wine-staging.git
      
      - name: Applying Wine Staging
        working-directory: /home/runner/work/wine-staging/staging
        run: ./patchinstall.py -d /home/runner/work/wine/wine -a
      
      - name: Configuring Wine Build 32
        working-directory: /home/runner/work/wine/wine
        run: |
          mkdir -p /home/runner/work/winebuild
          ./configure --prefix=/home/runner/work/winebuild_32
      
      - name: Building Wine 32
        working-directory: /home/runner/work/wine/wine
        run: |
         make -j$(nproc)
         make install
      
      - name: Configuring Wine Build 64
        working-directory: /home/runner/work/wine/wine
        run: |
          mkdir -p /home/runner/work/winebuild
          ./configure --enable-win64 --prefix=/home/runner/work/winebuild_64
      
      - name: Building Wine 64
        working-directory: /home/runner/work/wine/wine
        run: |
         make -j$(nproc)
         make install
      
      - name: Configuring Wine Build combo
        working-directory: /home/runner/work/wine/wine
        run: |
          mkdir -p /home/runner/work/winebuild_combo
          ./configure --with-wine64=/home/runner/work/winebuild_64 --with-wine-tools=/home/runner/work/winebuild_32 --prefix=/home/runner/work/winebuild_combo
      
      - name: Building Wine combo
        working-directory: /home/runner/work/wine/wine
        run: |
         make -j$(nproc)
         make install
         
      - uses: actions/upload-artifact@v2
        with:
          name: Output
          path: /home/runner/work/winebuild_combo
         
          
          
